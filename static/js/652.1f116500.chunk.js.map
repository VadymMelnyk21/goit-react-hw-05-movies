{"version":3,"file":"static/js/652.1f116500.chunk.js","mappings":"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","sources":["components/Error/Error.styled.jsx","components/Error/Error.jsx","components/MovieList/MovieList.styled.jsx","components/MovieListItem/MovieListItem.styled.jsx","components/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.jsx","pages/HomePage.jsx","hooks/useFetchTrending.jsx","services/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 40px;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  color: #42362b;\n  font-size: 30px;\n  font-weight: 500;\n`;\n","import PropTypes from 'prop-types';\nimport { Container, Text } from './Error.styled';\n\nexport default function ErrorMessage({ message }) {\n  return (\n    <Container>\n      <Text>{message}</Text>\n    </Container>\n  );\n}\n\nError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n  grid-gap: 16px;\n  margin: 20px auto;\n  padding: 0;\n  list-style: none;\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 400px;\n  object-fit: cover;\n`;\n\nexport const Title = styled.h2`\n  padding: 5px 10px;\n  font-size: 21px;\n  color: #42362b;\n`;\n","import { Item, Image, Title } from './MovieListItem.styled';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function MovieListItem({ id, tittle, poster }) {\n  const location = useLocation();\n\n  return (\n    <Item>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <div>\n          <Image\n            src={\n              poster\n                ? `https://image.tmdb.org/t/p/w500${poster}`\n                : 'https://image.tmdb.org/t/p/w500/4XlgNK3hLcw5yemwZYMkBvvyf1A.jpg'\n            }\n            alt=\"{title}\"\n          />\n        </div>\n        <Title>{tittle ? tittle : 'Без назви'}</Title>\n      </Link>\n    </Item>\n  );\n}\n\nMovieListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  tittle: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n};\n","import { List } from './MovieList.styled';\nimport MovieListItem from 'components/MovieListItem/MovieListItem';\nimport PropTypes from 'prop-types';\n\nexport default function MovieList({ movies }) {\n  return (\n    <List>\n      {movies.map(({ id, original_title, poster_path }) => {\n        return (\n          <MovieListItem\n            key={id}\n            id={id}\n            tittle={original_title}\n            poster={poster_path}\n          />\n        );\n      })}\n    </List>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import ErrorMessage from 'components/Error/Error';\nimport MovieList from 'components/MovieList/MovieList';\nimport { useFetchTrending } from '../hooks/useFetchTrending';\n\nexport default function HomePage() {\n  const { movies, error } = useFetchTrending();\n\n  return (\n    <section>\n      {error && <ErrorMessage message={error} />}\n      {movies && <MovieList movies={movies} />}\n    </section>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { fetchTrending } from '../services/API';\n\nexport const useFetchTrending = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchTrending()\n      .then(data => {\n        setMovies(data);\n\n        if (data.length === 0) {\n          setError('Контент відсутній');\n        }\n      })\n      .catch(error => setError(error.message));\n  }, []);\n\n  return { movies, error };\n};\n","import axios from \"axios\";\n\nconst key = '6169d862ccc0d011b31a05667d9a5c10';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\n\nexport async function fetchTrending() {\n    const { data } = await axios.get(`/trending/movie/day?api_key=${key}&language=uk&page=1`);\n\n    const moviesInfo = data.results.map(({ id, original_title, poster_path }) => ({ id, original_title, poster_path }))\n\n    return moviesInfo;\n}\n\nexport async function fetchSearch(query) {\n    const { data } = await axios.get(`/search/movie?api_key=${key}&query=${query}&language=uk&page=1`);\n\n    const moviesInfo = data.results.map(({ id, original_title, poster_path }) => ({ id, original_title, poster_path }))\n\n    return moviesInfo;\n}\n\nexport async function fetchMovieDetails(movieId) {\n    const { data } = await axios.get(`/movie/${movieId}?api_key=${key}&language=uk`);\n\n    const dataMovies = {\n        originalTitle: data.original_title,\n        title: data.title,\n        genres: data.genres,\n        overview: data.overview,\n        poster: data.poster_path,\n        releaseDate: data.release_date.slice(0, 4),\n        voteAverage: data.vote_average,\n    };\n    return dataMovies;\n}\n\nexport async function fetchMovieCredits(movieId) {\n    const { data } = await axios.get(`/movie/${movieId}/credits?api_key=${key}&language=uk`);\n\n    const castInfo = data.cast.map(({ id, name, profile_path }) => ({ id, name, profilePath: profile_path }))\n\n    return castInfo;\n}\n\nexport async function fetchMovieReviews(movieId) {\n    const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`);\n\n    const reviewsInfo = data.results.map(({ id, author, content }) => ({ id, author, content }))\n\n    return reviewsInfo;\n}\n"],"names":["Container","styled","Text","ErrorMessage","message","Error","propTypes","PropTypes","List","Item","Image","Title","MovieListItem","id","tittle","poster","location","useLocation","to","state","from","src","alt","MovieList","movies","map","original_title","poster_path","HomePage","useState","setMovies","error","setError","useEffect","fetchTrending","then","data","length","catch","useFetchTrending","key","axios","moviesInfo","results","fetchSearch","query","fetchMovieDetails","movieId","dataMovies","originalTitle","title","genres","overview","releaseDate","release_date","slice","voteAverage","vote_average","fetchMovieCredits","castInfo","cast","name","profilePath","profile_path","fetchMovieReviews","reviewsInfo","author","content"],"sourceRoot":""}