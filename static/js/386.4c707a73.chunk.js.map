{"version":3,"file":"static/js/386.4c707a73.chunk.js","mappings":"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","sources":["components/Error/Error.styled.jsx","components/Error/Error.jsx","components/ReviewsContent/ReviewsContent.styled.jsx","components/ReviewsContent/ReviewsContent.jsx","components/Reviews/Reviews.jsx","hooks/useFetchMovieReviews.jsx","services/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 40px;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  color: #42362b;\n  font-size: 30px;\n  font-weight: 500;\n`;\n","import PropTypes from 'prop-types';\nimport { Container, Text } from './Error.styled';\n\nexport default function ErrorMessage({ message }) {\n  return (\n    <Container>\n      <Text>{message}</Text>\n    </Container>\n  );\n}\n\nError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 20px;\n`;\n\nexport const List = styled.ul`\n  margin: -30px;\n`;\n\nexport const Item = styled.li`\n  position: relative;\n  margin: 30px;\n  padding: 25px;\n\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Text = styled.p`\n  line-height: 1.35;\n  color: #42362b;\n  margin-bottom: 8px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const TextBold = styled.span`\n  position: absolute;\n  top: -10px;\n  left: 10;\n  padding: 4px 10px;\n  font-weight: 700;\n  background-color: #42362b;\n  color: #fff;\n  border-radius: 2px;\n\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const TextTitle = styled.span`\n  font-weight: 700;\n  color: #5db09d;\n`;\n","import {\n  Container,\n  List,\n  Item,\n  Text,\n  TextBold,\n  TextTitle,\n} from './ReviewsContent.styled';\nimport PropTypes from 'prop-types';\n\nexport default function ReviewsContent({ reviews }) {\n  return (\n    <Container>\n      <List>\n        {reviews.map(({ id, author, content }) => {\n          return (\n            <Item key={id}>\n              <TextBold>{author}</TextBold>\n\n              <Text>\n                <TextTitle>Відгук:</TextTitle> {content}\n              </Text>\n            </Item>\n          );\n        })}\n      </List>\n    </Container>\n  );\n}\n\nReviewsContent.propTypes = {\n  reviews: PropTypes.array.isRequired,\n};\n","import ErrorMessage from 'components/Error/Error';\nimport ReviewsContent from 'components/ReviewsContent/ReviewsContent';\nimport useFetchMovieReviews from 'hooks/useFetchMovieReviews';\n\nexport default function Reviews() {\n  const { reviews, error } = useFetchMovieReviews();\n\n  return (\n    <div>\n      {error && <ErrorMessage message={error} />}\n      {reviews && <ReviewsContent reviews={reviews} />}\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/API';\n\nexport default function useFetchMovieReviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState();\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId)\n      .then(data => {\n        if (data.length === 0) {\n          setError('Відгуки відсутні');\n          return;\n        }\n\n        setReviews(data);\n      })\n      .catch(error => setError(error.message));\n  }, [movieId]);\n  return { reviews, error };\n}\n","import axios from \"axios\";\n\nconst key = '6169d862ccc0d011b31a05667d9a5c10';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\n\nexport async function fetchTrending() {\n    const { data } = await axios.get(`/trending/movie/day?api_key=${key}&language=uk&page=1`);\n\n    const moviesInfo = data.results.map(({ id, original_title, poster_path }) => ({ id, original_title, poster_path }))\n\n    return moviesInfo;\n}\n\nexport async function fetchSearch(query) {\n    const { data } = await axios.get(`/search/movie?api_key=${key}&query=${query}&language=uk&page=1`);\n\n    const moviesInfo = data.results.map(({ id, original_title, poster_path }) => ({ id, original_title, poster_path }))\n\n    return moviesInfo;\n}\n\nexport async function fetchMovieDetails(movieId) {\n    const { data } = await axios.get(`/movie/${movieId}?api_key=${key}&language=uk`);\n\n    const dataMovies = {\n        originalTitle: data.original_title,\n        title: data.title,\n        genres: data.genres,\n        overview: data.overview,\n        poster: data.poster_path,\n        releaseDate: data.release_date.slice(0, 4),\n        voteAverage: data.vote_average,\n    };\n    return dataMovies;\n}\n\nexport async function fetchMovieCredits(movieId) {\n    const { data } = await axios.get(`/movie/${movieId}/credits?api_key=${key}&language=uk`);\n\n    const castInfo = data.cast.map(({ id, name, profile_path }) => ({ id, name, profilePath: profile_path }))\n\n    return castInfo;\n}\n\nexport async function fetchMovieReviews(movieId) {\n    const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`);\n\n    const reviewsInfo = data.results.map(({ id, author, content }) => ({ id, author, content }))\n\n    return reviewsInfo;\n}\n"],"names":["Container","styled","Text","ErrorMessage","message","Error","propTypes","PropTypes","List","Item","TextBold","TextTitle","ReviewsContent","reviews","map","id","author","content","Reviews","movieId","useParams","useState","setReviews","error","setError","useEffect","fetchMovieReviews","then","data","length","catch","useFetchMovieReviews","key","fetchTrending","axios","moviesInfo","results","original_title","poster_path","fetchSearch","query","fetchMovieDetails","dataMovies","originalTitle","title","genres","overview","poster","releaseDate","release_date","slice","voteAverage","vote_average","fetchMovieCredits","castInfo","cast","name","profilePath","profile_path","reviewsInfo"],"sourceRoot":""}