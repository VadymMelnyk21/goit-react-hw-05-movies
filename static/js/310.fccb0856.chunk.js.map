{"version":3,"file":"static/js/310.fccb0856.chunk.js","mappings":"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","sources":["components/Error/Error.styled.jsx","components/Error/Error.jsx","components/MovieList/MovieList.styled.jsx","components/MovieListItem/MovieListItem.styled.jsx","components/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/MoviesPage.jsx","services/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 40px;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  color: #42362b;\n  font-size: 30px;\n  font-weight: 500;\n`;\n","import PropTypes from 'prop-types';\nimport { Container, Text } from './Error.styled';\n\nexport default function ErrorMessage({ message }) {\n  return (\n    <Container>\n      <Text>{message}</Text>\n    </Container>\n  );\n}\n\nError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n  grid-gap: 16px;\n  margin: 20px auto;\n  padding: 0;\n  list-style: none;\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 400px;\n  object-fit: cover;\n`;\n\nexport const Title = styled.h2`\n  padding: 5px 10px;\n  font-size: 21px;\n  color: #42362b;\n`;\n","import { Item, Image, Title } from './MovieListItem.styled';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function MovieListItem({ id, tittle, poster }) {\n  const location = useLocation();\n\n  return (\n    <Item>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <div>\n          <Image\n            src={\n              poster\n                ? `https://image.tmdb.org/t/p/w500${poster}`\n                : 'https://image.tmdb.org/t/p/w500/4XlgNK3hLcw5yemwZYMkBvvyf1A.jpg'\n            }\n            alt=\"{title}\"\n          />\n        </div>\n        <Title>{tittle ? tittle : 'Без назви'}</Title>\n      </Link>\n    </Item>\n  );\n}\n\nMovieListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  tittle: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n};\n","import { List } from './MovieList.styled';\nimport MovieListItem from 'components/MovieListItem/MovieListItem';\nimport PropTypes from 'prop-types';\n\nexport default function MovieList({ movies }) {\n  return (\n    <List>\n      {movies.map(({ id, original_title, poster_path }) => {\n        return (\n          <MovieListItem\n            key={id}\n            id={id}\n            tittle={original_title}\n            poster={poster_path}\n          />\n        );\n      })}\n    </List>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  width: 320px;\n  margin: 30px auto;\n`;\n\nexport const Form = styled.form`\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 4px 2px;\n  border: 0;\n  border-bottom: 1px solid #5db09d;\n  background-color: transparent;\n  color: #42362b;\n  font-size: 14px;\n\n  transition: border 250ms linear;\n\n  &:focus {\n    outline: none;\n    border-color: #42362b;\n  }\n\n  &::placeholder {\n    font-size: 15px;\n    font-weight: 400;\n    line-height: 1.17;\n    color: #42362b;\n  }\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  right: -2px;\n  bottom: 4px;\n  padding: 2px;\n  width: 16px;\n  height: 16px;\n  border: 0;\n  background-color: transparent;\n  cursor: pointer;\n\n  background-image: url(https://cdn-icons-png.flaticon.com/512/151/151773.png);\n  background-size: 100%;\n  background-repeat: no-repeat;\n  background-position: center;\n\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`;\n","import { useState } from 'react';\nimport { FormContainer, Form, Input, Button } from './SearchForm.styled';\nimport PropTypes from 'prop-types';\n\nexport default function SearchForm({ formSubmit, errorMessage }) {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query === '') {\n      errorMessage();\n      return;\n    }\n\n    formSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <FormContainer>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          name=\"query\"\n          value={query}\n          onChange={e => setQuery(e.target.value.toLowerCase().trim())}\n          autoComplete=\"off\"\n          placeholder=\"Давайте знайдемо\"\n        />\n        <Button type=\"submit\"></Button>\n      </Form>\n    </FormContainer>\n  );\n}\n\nSearchForm.propTypes = {\n  formSubmit: PropTypes.func.isRequired,\n  errorMessage: PropTypes.func.isRequired,\n};\n","import MovieList from 'components/MovieList/MovieList';\nimport { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchSearch } from '../services/API';\nimport ErrorMessage from 'components/Error/Error';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport Loader from 'components/Loader/Loader';\n\nexport default function MoviesPage() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [spiner, setSpiner] = useState(false);\n\n  const formSubmit = value => {\n    setSearchParams({ query: value });\n  };\n\n  const formErrorMessage = () => {\n    setMovies([]);\n    setError('Ви ввели пустий рядок!');\n  };\n\n  useEffect(() => {\n    const currentQuery = searchParams.get('query');\n\n    if (!currentQuery) return;\n    setSpiner(true);\n    fetchSearch(currentQuery)\n      .then(data => {\n        if (data.length === 0) {\n          setMovies([]);\n          setError('Контент відсутній спробуйте ввести інший запит');\n          return;\n        }\n        setMovies(data);\n        setError('');\n      })\n      .catch(error => setError(error.message))\n      .finally(setSpiner(false));\n  }, [searchParams]);\n\n  return (\n    <section>\n      <SearchForm formSubmit={formSubmit} errorMessage={formErrorMessage} />\n      {spiner && <Loader />}\n      {error && <ErrorMessage message={error} />}\n      {movies && <MovieList movies={movies} />}\n    </section>\n  );\n}\n","import axios from \"axios\";\n\nconst key = '6169d862ccc0d011b31a05667d9a5c10';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\n\nexport async function fetchTrending() {\n    const { data } = await axios.get(`/trending/movie/day?api_key=${key}&language=uk&page=1`);\n\n    const moviesInfo = data.results.map(({ id, original_title, poster_path }) => ({ id, original_title, poster_path }))\n\n    return moviesInfo;\n}\n\nexport async function fetchSearch(query) {\n    const { data } = await axios.get(`/search/movie?api_key=${key}&query=${query}&language=uk&page=1`);\n\n    const moviesInfo = data.results.map(({ id, original_title, poster_path }) => ({ id, original_title, poster_path }))\n\n    return moviesInfo;\n}\n\nexport async function fetchMovieDetails(movieId) {\n    const { data } = await axios.get(`/movie/${movieId}?api_key=${key}&language=uk`);\n\n    const dataMovies = {\n        originalTitle: data.original_title,\n        title: data.title,\n        genres: data.genres,\n        overview: data.overview,\n        poster: data.poster_path,\n        releaseDate: data.release_date.slice(0, 4),\n        voteAverage: data.vote_average,\n    };\n    return dataMovies;\n}\n\nexport async function fetchMovieCredits(movieId) {\n    const { data } = await axios.get(`/movie/${movieId}/credits?api_key=${key}&language=uk`);\n\n    const castInfo = data.cast.map(({ id, name, profile_path }) => ({ id, name, profilePath: profile_path }))\n\n    return castInfo;\n}\n\nexport async function fetchMovieReviews(movieId) {\n    const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`);\n\n    const reviewsInfo = data.results.map(({ id, author, content }) => ({ id, author, content }))\n\n    return reviewsInfo;\n}\n"],"names":["Container","styled","Text","ErrorMessage","message","Error","propTypes","PropTypes","List","Item","Image","Title","MovieListItem","id","tittle","poster","location","useLocation","to","state","from","src","alt","MovieList","movies","map","original_title","poster_path","FormContainer","Form","Input","Button","SearchForm","formSubmit","errorMessage","useState","query","setQuery","onSubmit","e","preventDefault","type","name","value","onChange","target","toLowerCase","trim","autoComplete","placeholder","MoviesPage","useSearchParams","searchParams","setSearchParams","setMovies","error","setError","spiner","setSpiner","useEffect","currentQuery","get","fetchSearch","then","data","length","catch","finally","Loader","key","fetchTrending","axios","moviesInfo","results","fetchMovieDetails","movieId","dataMovies","originalTitle","title","genres","overview","releaseDate","release_date","slice","voteAverage","vote_average","fetchMovieCredits","castInfo","cast","profilePath","profile_path","fetchMovieReviews","reviewsInfo","author","content"],"sourceRoot":""}