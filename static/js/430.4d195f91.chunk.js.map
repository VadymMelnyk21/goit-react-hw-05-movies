{"version":3,"file":"static/js/430.4d195f91.chunk.js","mappings":"kPAEMA,EAAM,mCAGZ,aAAO,OAAP,oBAAO,sGACoBC,IAAAA,IAAA,sCAAyCD,EAAzC,wBADpB,uBACKE,EADL,EACKA,KADL,kBAEIA,GAFJ,kEAFPD,IAAAA,SAAAA,QAAyB,+B,yCCDZE,EAAOC,EAAAA,GAAAA,GAAH,0NCAJC,EAAOD,EAAAA,GAAAA,GAAH,2QAWJE,EAAQF,EAAAA,GAAAA,IAAH,mGAOLG,EAAQH,EAAAA,GAAAA,GAAH,qF,6BChBH,SAASI,EAAT,GAAgD,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC5CC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACR,EAAD,WACE,UAAC,KAAD,CAAMS,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMJ,GAA1C,WACE,0BACE,SAACN,EAAD,CACEW,IACEN,EAAM,yCACgCA,GAClC,8FAENO,IAAI,eAGR,SAACX,EAAD,UAAQG,GAAkB,2DChBnB,SAASS,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAClC,OACE,SAACjB,EAAD,UACGiB,EAAOC,KAAI,YAA0C,IAAvCZ,EAAsC,EAAtCA,GAAIa,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,YACjC,OACE,SAACf,EAAD,CAEEC,GAAIA,EACJC,OAAQY,EACRX,OAAQY,GAHHd,QCNF,SAASe,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOL,EAAP,KAAeM,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,YLFL,WAAP,gCKGIC,GAAgBC,MAAK,SAAA3B,GACnBwB,EAAUxB,EAAK4B,cAEhB,KAGD,4BACE,SAACX,EAAD,CAAWC,OAAQA,IADrB","sources":["services/API.js","components/MovieList/MovieList.styled.jsx","components/MovieListItem/MovieListItem.styled.jsx","components/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.jsx","pages/HomePage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst key = '6169d862ccc0d011b31a05667d9a5c10';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\n\nexport async function fetchTrending() {\n    const { data } = await axios.get(`/trending/movie/day?api_key=${key}&language=uk&page=1`);\n    return data;\n}\n\nexport async function fetchSearch(query) {\n    const { data } = await axios.get(`/search/movie?api_key=${key}&query=${query}&language=uk&page=1`);\n    return data;\n}\n\nexport async function fetchMovieDetails(movieId) {\n    const { data } = await axios.get(`/movie/${movieId}?api_key=${key}&language=uk`);\n    return data;\n}\n\nexport async function fetchMovieCredits(movieId) {\n    const { data } = await axios.get(`/movie/${movieId}/credits?api_key=${key}&language=uk`);\n    return data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n    const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${key}&language=uk&page=1`);\n    return data;\n}\n\n\n\n\n\n\n\n// /trending/get - trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// / search / search - movies пошук фільму за ключовим словом на сторінці фільмів.\n// / movies / get - movie - details запит повної інформації про фільм для сторінки кінофільму.\n// / movies / get - movie - credits запит інформації про акторський склад для сторінки кінофільму.\n// / movies / get - movie - reviews запит оглядів для сторінки кінофільму.","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n  grid-gap: 16px;\n  margin: 20px auto;\n  padding: 0;\n  list-style: none;\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 400px;\n  object-fit: cover;\n`;\n\nexport const Title = styled.h2`\n  padding: 5px 10px;\n  font-size: 21px;\n  color: #42362b;\n`;\n","import { Item, Image, Title } from './MovieListItem.styled';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function MovieListItem({ id, tittle, poster }) {\n  const location = useLocation();\n\n  return (\n    <Item>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <div>\n          <Image\n            src={\n              poster\n                ? `https://image.tmdb.org/t/p/w500${poster}`\n                : 'Постер відсутній'\n            }\n            alt=\"{title}\"\n          />\n        </div>\n        <Title>{tittle ? tittle : 'Без назви'}</Title>\n      </Link>\n    </Item>\n  );\n}\n\nMovieListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  tittle: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n};\n","import { List } from './MovieList.styled';\nimport MovieListItem from 'components/MovieListItem/MovieListItem';\nimport PropTypes from 'prop-types';\n\nexport default function MovieList({ movies }) {\n  return (\n    <List>\n      {movies.map(({ id, original_title, poster_path }) => {\n        return (\n          <MovieListItem\n            key={id}\n            id={id}\n            tittle={original_title}\n            poster={poster_path}\n          />\n        );\n      })}\n    </List>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import { fetchTrending } from '../services/API';\nimport { useState, useEffect } from 'react';\nimport MovieList from 'components/MovieList/MovieList';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrending().then(data => {\n      setMovies(data.results);\n    });\n  }, []);\n\n  return (\n    <div>\n      <MovieList movies={movies} />\n      15\n    </div>\n  );\n}\n"],"names":["key","axios","data","List","styled","Item","Image","Title","MovieListItem","id","tittle","poster","location","useLocation","to","state","from","src","alt","MovieList","movies","map","original_title","poster_path","HomePage","useState","setMovies","useEffect","fetchTrending","then","results"],"sourceRoot":""}